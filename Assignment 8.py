{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   X\n",
       "0  7\n",
       "1  2\n",
       "2  0\n",
       "3  3\n",
       "4  4\n",
       "5  2\n",
       "6  5\n",
       "7  0\n",
       "8  3\n",
       "9  4"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ts = pd.DataFrame({'X': [7, 2, 0, 3, 4, 2, 5, 0, 3, 4]})\n",
    "ts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Question 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2015-01-01', '2015-01-02', '2015-01-05', '2015-01-06',\n",
       "               '2015-01-07', '2015-01-08', '2015-01-09', '2015-01-12',\n",
       "               '2015-01-13', '2015-01-14',\n",
       "               ...\n",
       "               '2015-12-18', '2015-12-21', '2015-12-22', '2015-12-23',\n",
       "               '2015-12-24', '2015-12-25', '2015-12-28', '2015-12-29',\n",
       "               '2015-12-30', '2015-12-31'],\n",
       "              dtype='datetime64[ns]', length=261, freq='B')"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "days=pd.date_range('1-01-2015','31-12-2015', freq='B')\n",
    "days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      212\n",
       "1       13\n",
       "2      131\n",
       "3      206\n",
       "4      210\n",
       "5      232\n",
       "6      152\n",
       "7      258\n",
       "8       59\n",
       "9       76\n",
       "10      98\n",
       "11     249\n",
       "12      73\n",
       "13     182\n",
       "14     282\n",
       "15     201\n",
       "16     260\n",
       "17     144\n",
       "18      63\n",
       "19     100\n",
       "20     292\n",
       "21     289\n",
       "22     267\n",
       "23     290\n",
       "24     244\n",
       "25     225\n",
       "26     115\n",
       "27     161\n",
       "28     194\n",
       "29     268\n",
       "      ... \n",
       "231     48\n",
       "232     16\n",
       "233     20\n",
       "234     98\n",
       "235     78\n",
       "236    207\n",
       "237    105\n",
       "238     58\n",
       "239    274\n",
       "240    222\n",
       "241    149\n",
       "242    269\n",
       "243    261\n",
       "244    284\n",
       "245    231\n",
       "246     95\n",
       "247    252\n",
       "248     39\n",
       "249    150\n",
       "250    270\n",
       "251    175\n",
       "252    155\n",
       "253    139\n",
       "254     17\n",
       "255    171\n",
       "256    125\n",
       "257    213\n",
       "258    115\n",
       "259    202\n",
       "260    266\n",
       "Length: 261, dtype: int32"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num=pd.Series(np.random.randint(1,300,261))\n",
    "num"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          col1  col2\n",
      "0   2015-01-01   212\n",
      "1   2015-01-02    13\n",
      "2   2015-01-05   131\n",
      "3   2015-01-06   206\n",
      "4   2015-01-07   210\n",
      "5   2015-01-08   232\n",
      "6   2015-01-09   152\n",
      "7   2015-01-12   258\n",
      "8   2015-01-13    59\n",
      "9   2015-01-14    76\n",
      "10  2015-01-15    98\n",
      "11  2015-01-16   249\n",
      "12  2015-01-19    73\n",
      "13  2015-01-20   182\n",
      "14  2015-01-21   282\n",
      "15  2015-01-22   201\n",
      "16  2015-01-23   260\n",
      "17  2015-01-26   144\n",
      "18  2015-01-27    63\n",
      "19  2015-01-28   100\n",
      "20  2015-01-29   292\n",
      "21  2015-01-30   289\n",
      "22  2015-02-02   267\n",
      "23  2015-02-03   290\n",
      "24  2015-02-04   244\n",
      "25  2015-02-05   225\n",
      "26  2015-02-06   115\n",
      "27  2015-02-09   161\n",
      "28  2015-02-10   194\n",
      "29  2015-02-11   268\n",
      "..         ...   ...\n",
      "231 2015-11-20    48\n",
      "232 2015-11-23    16\n",
      "233 2015-11-24    20\n",
      "234 2015-11-25    98\n",
      "235 2015-11-26    78\n",
      "236 2015-11-27   207\n",
      "237 2015-11-30   105\n",
      "238 2015-12-01    58\n",
      "239 2015-12-02   274\n",
      "240 2015-12-03   222\n",
      "241 2015-12-04   149\n",
      "242 2015-12-07   269\n",
      "243 2015-12-08   261\n",
      "244 2015-12-09   284\n",
      "245 2015-12-10   231\n",
      "246 2015-12-11    95\n",
      "247 2015-12-14   252\n",
      "248 2015-12-15    39\n",
      "249 2015-12-16   150\n",
      "250 2015-12-17   270\n",
      "251 2015-12-18   175\n",
      "252 2015-12-21   155\n",
      "253 2015-12-22   139\n",
      "254 2015-12-23    17\n",
      "255 2015-12-24   171\n",
      "256 2015-12-25   125\n",
      "257 2015-12-28   213\n",
      "258 2015-12-29   115\n",
      "259 2015-12-30   202\n",
      "260 2015-12-31   266\n",
      "\n",
      "[261 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "s=pd.DataFrame({'col1':days,'col2':num})\n",
    "s.set_index('col1')\n",
    "print (s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Question 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2015-01-07', '2015-01-14', '2015-01-21', '2015-01-28',\n",
       "               '2015-02-04', '2015-02-11', '2015-02-18', '2015-02-25',\n",
       "               '2015-03-04', '2015-03-11', '2015-03-18', '2015-03-25',\n",
       "               '2015-04-01', '2015-04-08', '2015-04-15', '2015-04-22',\n",
       "               '2015-04-29', '2015-05-06', '2015-05-13', '2015-05-20',\n",
       "               '2015-05-27', '2015-06-03', '2015-06-10', '2015-06-17',\n",
       "               '2015-06-24', '2015-07-01', '2015-07-08', '2015-07-15',\n",
       "               '2015-07-22', '2015-07-29', '2015-08-05', '2015-08-12',\n",
       "               '2015-08-19', '2015-08-26', '2015-09-02', '2015-09-09',\n",
       "               '2015-09-16', '2015-09-23', '2015-09-30', '2015-10-07',\n",
       "               '2015-10-14', '2015-10-21', '2015-10-28', '2015-11-04',\n",
       "               '2015-11-11', '2015-11-18', '2015-11-25', '2015-12-02',\n",
       "               '2015-12-09', '2015-12-16', '2015-12-23', '2015-12-30'],\n",
       "              dtype='datetime64[ns]', freq='W-WED')"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "days=pd.date_range('1-01-2015','31-12-2015', freq='W-Wed')\n",
    "days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(52,)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "days.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([280, 139,  62, 162, 118,  36, 222, 208, 206, 192, 254, 103, 269,\n",
       "        36,  98,  33, 181,  69, 182, 268, 288,  31, 135, 110, 161,  56,\n",
       "       246,  42,  89, 133, 122, 174,  52, 140, 262,  75, 244,  86, 198,\n",
       "       246, 140,  53, 222,  83, 260, 191,  72,  81, 290,  89, 120, 127])"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num1=np.random.randint(1,300,52)\n",
    "num1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         col3  col4\n",
      "0  2015-01-07   280\n",
      "1  2015-01-14   139\n",
      "2  2015-01-21    62\n",
      "3  2015-01-28   162\n",
      "4  2015-02-04   118\n",
      "5  2015-02-11    36\n",
      "6  2015-02-18   222\n",
      "7  2015-02-25   208\n",
      "8  2015-03-04   206\n",
      "9  2015-03-11   192\n",
      "10 2015-03-18   254\n",
      "11 2015-03-25   103\n",
      "12 2015-04-01   269\n",
      "13 2015-04-08    36\n",
      "14 2015-04-15    98\n",
      "15 2015-04-22    33\n",
      "16 2015-04-29   181\n",
      "17 2015-05-06    69\n",
      "18 2015-05-13   182\n",
      "19 2015-05-20   268\n",
      "20 2015-05-27   288\n",
      "21 2015-06-03    31\n",
      "22 2015-06-10   135\n",
      "23 2015-06-17   110\n",
      "24 2015-06-24   161\n",
      "25 2015-07-01    56\n",
      "26 2015-07-08   246\n",
      "27 2015-07-15    42\n",
      "28 2015-07-22    89\n",
      "29 2015-07-29   133\n",
      "30 2015-08-05   122\n",
      "31 2015-08-12   174\n",
      "32 2015-08-19    52\n",
      "33 2015-08-26   140\n",
      "34 2015-09-02   262\n",
      "35 2015-09-09    75\n",
      "36 2015-09-16   244\n",
      "37 2015-09-23    86\n",
      "38 2015-09-30   198\n",
      "39 2015-10-07   246\n",
      "40 2015-10-14   140\n",
      "41 2015-10-21    53\n",
      "42 2015-10-28   222\n",
      "43 2015-11-04    83\n",
      "44 2015-11-11   260\n",
      "45 2015-11-18   191\n",
      "46 2015-11-25    72\n",
      "47 2015-12-02    81\n",
      "48 2015-12-09   290\n",
      "49 2015-12-16    89\n",
      "50 2015-12-23   120\n",
      "51 2015-12-30   127\n"
     ]
    }
   ],
   "source": [
    "s1=pd.DataFrame({'col3':days,'col4':num1})\n",
    "s1.set_index('col3')\n",
    "print (s1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-07 00:00:00</td>\n",
       "      <td>280.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-01-14 00:00:00</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015-01-21 00:00:00</td>\n",
       "      <td>62.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015-01-28 00:00:00</td>\n",
       "      <td>162.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2015-02-04 00:00:00</td>\n",
       "      <td>118.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2015-02-11 00:00:00</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2015-02-18 00:00:00</td>\n",
       "      <td>222.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2015-02-25 00:00:00</td>\n",
       "      <td>208.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2015-03-04 00:00:00</td>\n",
       "      <td>206.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2015-03-11 00:00:00</td>\n",
       "      <td>192.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2015-03-18 00:00:00</td>\n",
       "      <td>254.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2015-03-25 00:00:00</td>\n",
       "      <td>103.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2015-04-01 00:00:00</td>\n",
       "      <td>269.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2015-04-08 00:00:00</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2015-04-15 00:00:00</td>\n",
       "      <td>98.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2015-04-22 00:00:00</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2015-04-29 00:00:00</td>\n",
       "      <td>181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2015-05-06 00:00:00</td>\n",
       "      <td>69.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2015-05-13 00:00:00</td>\n",
       "      <td>182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2015-05-20 00:00:00</td>\n",
       "      <td>268.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2015-05-27 00:00:00</td>\n",
       "      <td>288.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2015-06-03 00:00:00</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2015-06-10 00:00:00</td>\n",
       "      <td>135.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2015-06-17 00:00:00</td>\n",
       "      <td>110.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2015-06-24 00:00:00</td>\n",
       "      <td>161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2015-07-01 00:00:00</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2015-07-08 00:00:00</td>\n",
       "      <td>246.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2015-07-15 00:00:00</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2015-07-22 00:00:00</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2015-07-29 00:00:00</td>\n",
       "      <td>133.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2015-08-05 00:00:00</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>2015-08-12 00:00:00</td>\n",
       "      <td>174.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>2015-08-19 00:00:00</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2015-08-26 00:00:00</td>\n",
       "      <td>140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>2015-09-02 00:00:00</td>\n",
       "      <td>262.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>2015-09-09 00:00:00</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>2015-09-16 00:00:00</td>\n",
       "      <td>244.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>2015-09-23 00:00:00</td>\n",
       "      <td>86.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>2015-09-30 00:00:00</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>2015-10-07 00:00:00</td>\n",
       "      <td>246.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>2015-10-14 00:00:00</td>\n",
       "      <td>140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>2015-10-21 00:00:00</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>2015-10-28 00:00:00</td>\n",
       "      <td>222.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>2015-11-04 00:00:00</td>\n",
       "      <td>83.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>2015-11-11 00:00:00</td>\n",
       "      <td>260.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>2015-11-18 00:00:00</td>\n",
       "      <td>191.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>2015-11-25 00:00:00</td>\n",
       "      <td>72.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>2015-12-02 00:00:00</td>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>2015-12-09 00:00:00</td>\n",
       "      <td>290.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>2015-12-16 00:00:00</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>2015-12-23 00:00:00</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>2015-12-30 00:00:00</td>\n",
       "      <td>127.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>7736</td>\n",
       "      <td>7736.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      col3    col4\n",
       "0      2015-01-07 00:00:00   280.0\n",
       "1      2015-01-14 00:00:00   139.0\n",
       "2      2015-01-21 00:00:00    62.0\n",
       "3      2015-01-28 00:00:00   162.0\n",
       "4      2015-02-04 00:00:00   118.0\n",
       "5      2015-02-11 00:00:00    36.0\n",
       "6      2015-02-18 00:00:00   222.0\n",
       "7      2015-02-25 00:00:00   208.0\n",
       "8      2015-03-04 00:00:00   206.0\n",
       "9      2015-03-11 00:00:00   192.0\n",
       "10     2015-03-18 00:00:00   254.0\n",
       "11     2015-03-25 00:00:00   103.0\n",
       "12     2015-04-01 00:00:00   269.0\n",
       "13     2015-04-08 00:00:00    36.0\n",
       "14     2015-04-15 00:00:00    98.0\n",
       "15     2015-04-22 00:00:00    33.0\n",
       "16     2015-04-29 00:00:00   181.0\n",
       "17     2015-05-06 00:00:00    69.0\n",
       "18     2015-05-13 00:00:00   182.0\n",
       "19     2015-05-20 00:00:00   268.0\n",
       "20     2015-05-27 00:00:00   288.0\n",
       "21     2015-06-03 00:00:00    31.0\n",
       "22     2015-06-10 00:00:00   135.0\n",
       "23     2015-06-17 00:00:00   110.0\n",
       "24     2015-06-24 00:00:00   161.0\n",
       "25     2015-07-01 00:00:00    56.0\n",
       "26     2015-07-08 00:00:00   246.0\n",
       "27     2015-07-15 00:00:00    42.0\n",
       "28     2015-07-22 00:00:00    89.0\n",
       "29     2015-07-29 00:00:00   133.0\n",
       "30     2015-08-05 00:00:00   122.0\n",
       "31     2015-08-12 00:00:00   174.0\n",
       "32     2015-08-19 00:00:00    52.0\n",
       "33     2015-08-26 00:00:00   140.0\n",
       "34     2015-09-02 00:00:00   262.0\n",
       "35     2015-09-09 00:00:00    75.0\n",
       "36     2015-09-16 00:00:00   244.0\n",
       "37     2015-09-23 00:00:00    86.0\n",
       "38     2015-09-30 00:00:00   198.0\n",
       "39     2015-10-07 00:00:00   246.0\n",
       "40     2015-10-14 00:00:00   140.0\n",
       "41     2015-10-21 00:00:00    53.0\n",
       "42     2015-10-28 00:00:00   222.0\n",
       "43     2015-11-04 00:00:00    83.0\n",
       "44     2015-11-11 00:00:00   260.0\n",
       "45     2015-11-18 00:00:00   191.0\n",
       "46     2015-11-25 00:00:00    72.0\n",
       "47     2015-12-02 00:00:00    81.0\n",
       "48     2015-12-09 00:00:00   290.0\n",
       "49     2015-12-16 00:00:00    89.0\n",
       "50     2015-12-23 00:00:00   120.0\n",
       "51     2015-12-30 00:00:00   127.0\n",
       "total                 7736  7736.0"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1.loc['total']=s1['col4'].sum()\n",
    "s1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Question 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2015-01-01</th>\n",
       "      <td>2015-01-01</td>\n",
       "      <td>932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-31</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-30</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-29</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-28</th>\n",
       "      <td>2014-12-28</td>\n",
       "      <td>318</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             datetime  score\n",
       "datetime                    \n",
       "2015-01-01 2015-01-01    932\n",
       "2014-12-31 2014-12-31    640\n",
       "2014-12-30 2014-12-30    760\n",
       "2014-12-29 2014-12-29    400\n",
       "2014-12-28 2014-12-28    318"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "base = datetime.datetime(2015,1,1)\n",
    "date_list = [base - datetime.timedelta(days=x) for x in range(0, 365)]\n",
    "score_list = list(np.random.randint(low=1, high=1000, size=365))\n",
    "df = pd.DataFrame()\n",
    "df['datetime'] = date_list\n",
    "df['datetime'] = pd.to_datetime(df['datetime'])\n",
    "df.index = df['datetime'] \n",
    "df['score'] = score_list\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-10-31</th>\n",
       "      <td>420.062500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-11-30</th>\n",
       "      <td>491.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-12-31</th>\n",
       "      <td>574.387097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-31</th>\n",
       "      <td>534.161290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-02-28</th>\n",
       "      <td>478.285714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-31</th>\n",
       "      <td>453.129032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-04-30</th>\n",
       "      <td>380.266667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-05-31</th>\n",
       "      <td>530.903226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-06-30</th>\n",
       "      <td>468.966667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-07-31</th>\n",
       "      <td>544.548387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-08-31</th>\n",
       "      <td>543.387097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-09-30</th>\n",
       "      <td>500.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-10-31</th>\n",
       "      <td>617.533333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 score\n",
       "datetime              \n",
       "2017-10-31  420.062500\n",
       "2017-11-30  491.200000\n",
       "2017-12-31  574.387097\n",
       "2018-01-31  534.161290\n",
       "2018-02-28  478.285714\n",
       "2018-03-31  453.129032\n",
       "2018-04-30  380.266667\n",
       "2018-05-31  530.903226\n",
       "2018-06-30  468.966667\n",
       "2018-07-31  544.548387\n",
       "2018-08-31  543.387097\n",
       "2018-09-30  500.200000\n",
       "2018-10-31  617.533333"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.resample('M').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Question 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2015-01-31', '2015-04-30', '2015-07-31', '2015-10-31'], dtype='datetime64[ns]', freq='Q-JAN')"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "days=pd.date_range('1-01-2015','31-12-2015', freq='Q-JAN')\n",
    "days"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
